;; Caps to escape/control configuration for Kanata


(defcfg process-unmapped-keys yes)

(deftemplate charmod (char mod)
  (switch
    ((key-timing 3 less-than 250)) $char break
    () (tap-hold-release-timeout 200 500 $char $mod $char) break
  )
)

;; Config for 12" MacBook with physical f keys. This config allows for brightness etc to still work.
(defsrc
	esc	f1	f2	f3	f4	f5	f6	f7	f8	f9	f10	f11	f12
	IntlBackslash	1	2	3	4	5		6	7	8	9	0		-	=	bspc
	tab			q	w	e	r	t		y	u	i	o	p		[	]	ret
	caps			a	s	d	f	g		h	j	k	l	;		'	\
	lsft	`		z	x	c	v	b		n	m	,	.	/		rsft
	lctl			lalt lmet			spc			rmet ralt
)

(defvar
	;; Note: consider using different time values for your different fingers.
	;; For example, your pinkies might be slower to release keys and index
	;; fingers faster.
	tap-time 200
	hold-time 200
	hold-time-slow 300
)

;; Definine two aliases, one for esc/control to other for function key
(defalias
	meh (multi ctl alt sft)
	l_spc (tap-hold $tap-time $hold-time spc (layer-while-held space))
	emeh (tap-hold $tap-time $hold-time esc @meh)
	escctrl (tap-hold 100 100 esc lctl)
	l_num (layer-toggle num)

	mc C-up ;; Mission Control
	sls M-spc ;; Spotlight Search
	dtn S-C-A-M-f5 ;; Dictation
	dnd S-C-A-M-f6 ;; Do Not Disturb
	lp S-C-A-M-l ;; Launchpad

	a (tap-hold $tap-time $hold-time a lctl)
	s (tap-hold $tap-time $hold-time s lalt)
	d (tap-hold $tap-time $hold-time d lmet)
	f (tap-hold $tap-time $hold-time f lsft)

	j (tap-hold $tap-time $hold-time j rsft)
	k (tap-hold $tap-time $hold-time k rmet )
	l (tap-hold $tap-time $hold-time l ralt)
	; (tap-hold $tap-time $hold-time ; rctl)

	' (tap-hold $tap-time $hold-time ' @l_num)

	c_a (chord asdf a)
	c_s (chord asdf s)
	c_d (chord asdf d)
	c_f (chord asdf f)

	c_j (chord right j)
	c_k (chord right k)
	c_l (chord right l)
	c_; (chord right ;)

	c_z (chord zxcv z)
	c_x (chord zxcv x)
	c_c (chord zxcv c)
	c_v (chord zxcv v)

	c_q (chord qwer q)
	c_w (chord qwer w)
	c_e (chord qwer e)
	c_r (chord qwer r)
	c_t (chord qwer t)

	c_n (chord nm n)
	c_m (chord nm m)
	c_, (chord nm ,)
	c_. (chord nm .)
	c_/ (chord nm /)
)

;; chords / combos

(defchords asdf 75
	(a	) a
	(  s	) s
	(   d	) d
	(     f ) f
	(   d f ) tab
	( s d f ) `
	(a s d f ) esc
)

(defchords right 75
	(j      ) j
	(  k    ) k
	(    l  ) l
	(      ;) ;
	(j k    ) bspc
	(j k l  ) ret
	(j k l ;) ret
	;;(j   ;) caps
)


(defchords zxcv 75
	(z	) z
	( x 	) x
	(  c 	) c
	(    v	) v

	(z x	) M-x
	(x c  	) M-c
	(c v	) M-v
)

(defchords qwer 75
	(q	) q
	( w	) w
	(  e 	) e
	(   r	) r
	(     t ) t
	(    r t) `
	( w e r ) A-bspc
)

(defchords nm 75
	(n	) n
	( m	) m
	(  , 	) ,
	(   .	) .
	( /	) /
	( , . ) -
	( . / ) =
)

(deflayermap (main)
  IntlBackslash `
  q @c_q
  w @c_w
  e @c_e
  r @c_r
  t @c_t
  a (t! charmod @c_a lctl)
  s (t! charmod @c_s lalt)
  d (t! charmod @c_d lmet)
  f (t! charmod @c_f lsft)
  j (t! charmod @c_j rsft)
  k (t! charmod @c_k rmet)
  l (t! charmod @c_l ralt)
  ; (t! charmod @c_; rctl)
  ' @'

  z @c_z
  x	@c_x
  c 	@c_c
  v 	@c_v
  n @c_n
  m @c_m
  , @c_,
  . @c_.
  / @c_/
  caps @emeh
  spc @l_spc
)

(deflayer base
	esc		üîÖ	üîÜ	@mc	@sls	@dtn		@dnd	‚óÄ‚óÄ	‚ñ∂‚è∏	‚ñ∂‚ñ∂	üîá	üîâ	üîä
	`		1	2	3	4	5		6	7	8	9	0	-	=	bspc
	XX		@c_q	@c_w	@c_e	@c_r	@c_t		y	u	i	o	p	[	]	ret
	@emeh		@c_a	@c_s	@c_d	@c_f	g		h	@c_j 	@c_k 	@c_l 	@c_;	@'	\
	lsft	`	@c_z	@c_x 	@c_c 	@c_v	b		@c_n	@c_m	@c_,	@c_.	@c_/		rsft
	lctl		lalt	lmet			@l_spc			rmet ralt
)

(deflayer space
	esc		f1	f2	f3	f4	f5		f6	f7	f8	f9	f10	f11	f12
	`		1	2	3	4	5		6	7	8	9	0	-	=	bspc
	tab		S-9	A-left	up	A-right	S-0		y	u	S-9	S-0	p	[	]	ret
	caps		S-tab	left	down	right	tab 		A-bspc	@c_j 	@c_k 	@c_l 	@c_;	'	\
	lsft	`	{	S-tab	ret	tab	}		n	m	[	]	/	lrld
	lctl			lalt lmet			spc			rmet ralt
)

(deflayer num
	esc		f1	f2	f3	f4	f5		f6	f7	f8	f9	f10	f11	f12
	`		1	2	3	4	5		6	7	8	9	0	-	=	bspc
	tab		S-1	S-2	S-3	S-4	S-5		S-6	S-7	S-8	S-9	S-0	[	]	ret
	caps		1	2	3	4	5		6	7	8	9	0	'	\
	lsft	`	[	]	S-9 	S-0	b		S--	-	S-=	=	/	rsft
	lctl			lalt lmet			-			rmet ralt
)
