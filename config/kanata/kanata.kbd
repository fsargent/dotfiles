;; Caps to escape/control configuration for Kanata


(defcfg process-unmapped-keys no concurrent-tap-hold yes)


;; Config for 12" MacBook with physical f keys. This config allows for brightness etc to still work.
(defsrc
	esc	f1	f2	f3	f4	f5	f6	f7	f8	f9	f10	f11	f12
	IntlBackslash	1	2	3	4	5		6	7	8	9	0		-	=	bspc
	tab			q	w	e	r	t		y	u	i	o	p		[	]	ret
	caps			a	s	d	f	g		h	j	k	l	;		'	\
	lsft	`		z	x	c	v	b		n	m	,	.	/		rsft
	lctl			lalt lmet			spc			rmet ralt
)

(defvar
	;; Note: consider using different time values for your different fingers.
	;; For example, your pinkies might be slower to release keys and index
	;; fingers faster.
	tap-time 200
	hold-time 200
	hold-time-slow 300
)



;; Definine two aliases, one for esc/control to other for function key
(defalias
	meh (multi ctl alt sft)
	l_spc (tap-hold $tap-time $hold-time spc (layer-while-held space))
	emeh (tap-hold $tap-time $hold-time esc @meh)
	escctrl (tap-hold 100 100 esc lctl)
	l_num (layer-toggle num)

	mc C-up ;; Mission Control
	sls M-spc ;; Spotlight Search
	dtn S-C-A-M-f5 ;; Dictation
	dnd S-C-A-M-f6 ;; Do Not Disturb
	lp S-C-A-M-l ;; Launchpad

	a (tap-hold $tap-time $hold-time a lalt)
	s (tap-hold 300 $hold-time s lctl)
	d (tap-hold $tap-time $hold-time d lmet)
	f (tap-hold 100 $hold-time f lsft)

	j (tap-hold $tap-time $hold-time j rsft)
	k (tap-hold $tap-time $hold-time k rmet)
	l (tap-hold $tap-time $hold-time l rctl)
	; (tap-hold $tap-time $hold-time ; ralt	)
	' (tap-hold $tap-time $hold-time ' @l_num)

)

;; chords / combos

;; tab cmd - switch applications
;; ` cmd - switch windows
;; tab control - switch tab
;; ` control - open terminal

(defchordsv2
	(a s	)	S-tab 50 first-release ()
	(a s d  ) 	esc 50 first-release ()
	(  s d  )	` 50 all-released  ()
	(    d f) 	tab 50 all-released  ()
	(  s d f) 	esc 50 all-released  ()
	(a s d f) 	esc 50 all-released  ()

	(j k    ) bspc 50 first-release ()
	(j k l  ) A-bspc 50 first-release ()
	(    l ;) del 50 first-release ()

;;	(  i o	) ret 25 first-release ()
	(  k l  ) ret 50 first-release ()
	(j k l ;) ret 50 first-release ()
	(j     ;) caps 50 first-release ()

	(z x	) M-x 50 first-release ()
	(x c  	) M-c 50 first-release ()
	(c v	) M-v 50 first-release ()

	( , . ) - 50 first-release ()
	( . / ) = 50 first-release ()
)


(deflayer base
	esc		üîÖ	üîÜ	@mc	@sls	@dtn		@dnd	‚óÄ‚óÄ	‚ñ∂‚è∏	‚ñ∂‚ñ∂	üîá	üîâ	üîä
	`		1	2	3	4	5		6	7	8	9	0	-	=	bspc
	XX		q	w	e	r	t		y	u	i	o	p	[	]	ret
	@emeh		@a 	@s 	@d 	@f	g		h	@j	@k		@l	@;	@'	\
	lsft	`	z	x 	c 	v	b		n	m	,	.	/		rsft
	lctl		lalt	lmet			@l_spc			rmet ralt
)

(deflayer space
	esc		f1	f2	f3	f4	f5		f6	f7	f8	f9	f10	f11	f12
	`		1	2	3	4	5		6	7	8	9	0	-	=	bspc
	tab		S-9	A-left	up	A-right	S-0		y	u	-	=	p	[	]	ret
	caps		S-tab	left	down	right	tab 		A-bspc	@j	@k	@l	@;	'	\
	lsft	`	{	S-tab	ret	tab	}		n	m	[	]	/	lrld
	lctl			lalt lmet			spc			rmet ralt
)

(deflayer num
	esc		f1	f2	f3	f4	f5		f6	f7	f8	f9	f10	f11	f12
	`		1	2	3	4	5		6	7	8	9	0	-	=	bspc
	tab		S-1	S-2	S-3	S-4	S-5		S-6	S-7	S-8	S-9	S-0	[	]	ret
	caps		1	2	3	4	5		6	7	8	9	0	'	\
	lsft	`	[	]	S-9 	S-0	b		S--	-	S-=	=	/	rsft
	lctl			lalt lmet			-			rmet ralt
)

